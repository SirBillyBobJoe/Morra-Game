package nz.ac.auckland.se281.strategy;

import java.util.ArrayList;

public class ProcessStrategy {
  // class that uses the strategy interfaces to execute the algorithims implemented in the strategy
  // classes
  private Strategy strategy;
  private ArrayList<Integer> list = new ArrayList<Integer>();
  private int count = 0;

  // constructor and sets strategy
  public ProcessStrategy(Strategy strategy) {
    this.strategy = strategy;
  }

  // returns the strategy to check what we are currently using
  public String getStrategy() {
    return strategy.getStrategy();
  }

  // updates and changes the strategy being used
  public void setStrategy(Strategy strategy) {
    this.strategy = strategy;
  }

  // returns the sum generated by the strategy
  public int getSum(int num) {
    // adds the number the human has used and stores it into the list to keep the histroy of the
    // numbers
    if (count != 0) {
      list.add(num);
    }

    count++;
    return strategy.getSum(list);
  }

  // returns the number of fingers generated by the strategy
  public int getFingers() {
    int fingers = strategy.getFingers();

    return fingers;
  }
}
